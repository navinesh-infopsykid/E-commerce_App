import 'dart:convert';

import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';

import 'classapi.dart';

class firstapi extends StatefulWidget {
  
  
  
  const firstapi({super.key});

  @override
  State<firstapi> createState() => _firstapiState();
}

class _firstapiState extends State<firstapi> {


  final control = PageController(initialPage: 1,);

Future<Autogenerated>catapi()async{
var cat=await http.get(Uri.parse("https://catfact.ninja/fact"));
return Autogenerated.fromJson(jsonDecode(cat.body));}

  Future<List<Fakestore>>fakeapi()async{
    var res=await http.get(Uri.parse("https://fakestoreapi.com/products"));
    List data= jsonDecode(res.body);
    return data.map((e) => Fakestore.fromJson(e)).toList();

}

  Future<boredapi>boreapi()async{
    var bore=await http.get(Uri.parse("https://www.boredapi.com/api/activity"));
    return boredapi.fromJson(jsonDecode(bore.body));}
  
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: PageView(

          controller: control,
          children: [
            FutureBuilder<Autogenerated>(
                future: catapi(),
                builder: (context,snapshot){
                  if (snapshot.hasData){
                    return Column(
                      children: [
                        SizedBox(height: 50,),
                        Padding(
                          padding: const EdgeInsets.all(30.0),
                          child: Center(child:
                          Text(snapshot.data!.fact.toString()
                          ),),
                        )
                      ],
                    );
                  }else if(snapshot.hasError){
                    return Column(
                      children: [
                        Icon(Icons.error_outline,color: Colors.red,size: 60,),
                        Text("Error: ${snapshot.error}"),
                      ],
                    );
                  }else{
                    return Column(
                      children: [
                        SizedBox(height: 60,width: 60,
                        child: CircularProgressIndicator(color: Colors.red,),),
                        SizedBox(height: 10,),
                        Text("Results are coming")
                      ],
                    );
                  }
                }),
            FutureBuilder<boredapi>(
                future: boreapi(),
                builder: (context,snapshot){
                  if (snapshot.hasData){
                    return Column(
                      children: [
                        SizedBox(height: 50,),
                        Center(child: Text(snapshot.data!.activity.toString())),
                        SizedBox(height: 10,),
                        Center(child: Text(snapshot.data!.type.toString())),
                        SizedBox(height: 10,),
                        Center(child: Text(snapshot.data!.participants.toString())),
                        SizedBox(height: 10,),
                        Center(child: Text(snapshot.data!.activity.toString())),
                        SizedBox(height: 10,),
                        Center(child: Text(snapshot.data!.link.toString())),
                        SizedBox(height: 10,),
                        Center(child: Text(snapshot.data!.key.toString())),
                        SizedBox(height: 10,),


                      ],
                    );
                  }else if(snapshot.hasError){
                    return Column(
                      children: [
                        Icon(Icons.error_outline,color: Colors.red,size: 60,),
                        Text("Error: ${snapshot.error}"),
                      ],
                    );
                  }else{
                    return Column(
                      children: [
                        SizedBox(height: 60,width: 60,
                          child: CircularProgressIndicator(color: Colors.red,),),
                        SizedBox(height: 10,),
                        Text("Results are coming")
                      ],
                    );
                  }
                }),
            FutureBuilder<List<Fakestore>>(
                future: fakeapi(),
                builder: (context,snapshot){
                  if (snapshot.hasData){
                    return ListView.builder(
                    itemCount: 5,
                    itemBuilder: (BuildContext context, int index) {
                      return Column(
                        children: [
                        SizedBox(height: 50,),
                      Center(child: Text(snapshot.data![index].id.toString())),
                      SizedBox(height: 10,),
                      Center(child: Text(snapshot.data![index].title.toString())),
                      SizedBox(height: 10,),
                      Center(child: Text(snapshot.data![index].price.toString())),
                      SizedBox(height: 10,),
                      Center(child: Text(snapshot.data![index].description.toString())),
                      SizedBox(height: 10,),
                      Center(child: Text(snapshot.data![index].category.toString())),
                      SizedBox(height: 10,),
                      Center(child: Image.network(snapshot.data![index].image.toString())),
                      SizedBox(height: 10,),
                      Center(child: Text(snapshot.data![index].rating.toString())),
                      SizedBox(height: 10,),]
                      );
                    }
    );
                    } else if(snapshot.hasError){
                    return Column(
                      children: [
                        Icon(Icons.error_outline,color: Colors.red,size: 60,),
                        Text("Error: ${snapshot.error}"),
                      ],
                    );
                  }else{
                    return Column(
                      children: [
                        SizedBox(height: 60,width: 60,
                          child: CircularProgressIndicator(color: Colors.red,),),
                        SizedBox(height: 10,),
                        Text("Results are coming")
                      ],
                    );
                  }
                }),
          ],

      ),
    );
  }

}

